{"ast":null,"code":"var _jsxFileName = \"/home/jeevesh/My Files/Study/Web Development/React/fullstack_todo_app/todos_frontend/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport * as apiCalls from './api';\nconst APIURL = '/api/todos/';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadTodos();\n  }\n\n  async loadTodos() {\n    const todos = await apiCalls.getTodos();\n    this.setState({\n      todos\n    });\n  }\n\n  addTodo(val) {\n    fetch(APIURL, {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        name: val\n      })\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {\n            let err = {\n              errMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errMessage: 'Please try again later, server is not responding'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json().then(newTodo => this.setState({\n        todos: [...this.state.todos, newTodo]\n      }));\n    });\n  }\n\n  deleteTodo(id) {\n    const deleteURL = APIURL + id;\n    fetch(deleteURL, {\n      method: 'delete'\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {\n            let err = {\n              errMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errMessage: 'Please try again later, server is not responding'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json().then(() => {\n        const todos = this.state.todos.filter(todo => todo._id !== id);\n        this.setState({\n          todos\n        });\n      });\n    });\n  }\n\n  toggleTodo(todo) {\n    const toggleURL = APIURL + todo._id;\n    fetch(toggleURL, {\n      method: 'put',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        completed: !todo.completed\n      })\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {\n            let err = {\n              errMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errMessage: 'Please try again later, server is not responding'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json().then(updatedTodo => {\n        const todos = this.state.todos.map(t => t._id === updatedTodo._id ? { ...t,\n          completed: !t.completed\n        } : t);\n        this.setState({\n          todos\n        });\n      });\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(t => /*#__PURE__*/React.createElement(TodoItem, Object.assign({\n      key: t._id\n    }, t, {\n      onDelete: this.deleteTodo.bind(this, t._id),\n      onToggle: this.toggleTodo.bind(this, t),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 4\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, \"Todo List\"), /*#__PURE__*/React.createElement(TodoForm, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, todos));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/jeevesh/My Files/Study/Web Development/React/fullstack_todo_app/todos_frontend/src/TodoList.js"],"names":["React","Component","TodoItem","TodoForm","apiCalls","APIURL","TodoList","constructor","props","state","todos","addTodo","bind","componentDidMount","loadTodos","getTodos","setState","val","fetch","method","headers","Headers","body","JSON","stringify","name","then","resp","ok","status","json","data","err","errMessage","message","newTodo","deleteTodo","id","deleteURL","filter","todo","_id","toggleTodo","toggleURL","completed","updatedTodo","map","t","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport * as apiCalls from './api';\n\nconst APIURL = '/api/todos/';\n\nclass TodoList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttodos: []\n\t\t};\n\t\tthis.addTodo = this.addTodo.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadTodos();\n\t}\n\n\tasync loadTodos() {\n\t\tconst todos = await apiCalls.getTodos();\n\t\tthis.setState({ todos });\n\t}\n\n\taddTodo(val) {\n\t\tfetch(APIURL, {\n\t\t\tmethod: 'post',\n\t\t\theaders: new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tbody: JSON.stringify({ name: val })\n\t\t}).then((resp) => {\n\t\t\tif (!resp.ok) {\n\t\t\t\tif (resp.status >= 400 && resp.status < 500) {\n\t\t\t\t\treturn resp.json().then((data) => {\n\t\t\t\t\t\tlet err = { errMessage: data.message };\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlet err = { errMessage: 'Please try again later, server is not responding' };\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resp.json().then((newTodo) => this.setState({ todos: [ ...this.state.todos, newTodo ] }));\n\t\t});\n\t}\n\n\tdeleteTodo(id) {\n\t\tconst deleteURL = APIURL + id;\n\t\tfetch(deleteURL, {\n\t\t\tmethod: 'delete'\n\t\t}).then((resp) => {\n\t\t\tif (!resp.ok) {\n\t\t\t\tif (resp.status >= 400 && resp.status < 500) {\n\t\t\t\t\treturn resp.json().then((data) => {\n\t\t\t\t\t\tlet err = { errMessage: data.message };\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlet err = { errMessage: 'Please try again later, server is not responding' };\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resp.json().then(() => {\n\t\t\t\tconst todos = this.state.todos.filter((todo) => todo._id !== id);\n\t\t\t\tthis.setState({ todos });\n\t\t\t});\n\t\t});\n\t}\n\n\ttoggleTodo(todo) {\n\t\tconst toggleURL = APIURL + todo._id;\n\t\tfetch(toggleURL, {\n\t\t\tmethod: 'put',\n\t\t\theaders: new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tbody: JSON.stringify({ completed: !todo.completed })\n\t\t}).then((resp) => {\n\t\t\tif (!resp.ok) {\n\t\t\t\tif (resp.status >= 400 && resp.status < 500) {\n\t\t\t\t\treturn resp.json().then((data) => {\n\t\t\t\t\t\tlet err = { errMessage: data.message };\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlet err = { errMessage: 'Please try again later, server is not responding' };\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resp.json().then((updatedTodo) => {\n\t\t\t\tconst todos = this.state.todos.map(\n\t\t\t\t\t(t) => (t._id === updatedTodo._id ? { ...t, completed: !t.completed } : t)\n\t\t\t\t);\n\t\t\t\tthis.setState({ todos });\n\t\t\t});\n\t\t});\n\t}\n\n\trender() {\n\t\tconst todos = this.state.todos.map((t) => (\n\t\t\t<TodoItem\n\t\t\t\tkey={t._id}\n\t\t\t\t{...t}\n\t\t\t\tonDelete={this.deleteTodo.bind(this, t._id)}\n\t\t\t\tonToggle={this.toggleTodo.bind(this, t)}\n\t\t\t/>\n\t\t));\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Todo List</h1>\n\t\t\t\t<TodoForm addTodo={this.addTodo} />\n\t\t\t\t<ul>{todos}</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}